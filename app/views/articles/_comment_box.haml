= form_remote_tag :url => {:action => "comment", :id => @article}, |
                  :position=> :bottom,  |
                  :update => {:success => 'commentList'}, |
                  :loading => "loading()",  |
                  :complete => "complete(request)", |
                  :failure => "failure(request)", |
                  :html => {:id=>"commentform",:class=>"commentform"} |

.comment-box
  #errors
  #preview{:style => 'display: none'}
  
  %a{:name => 'respond'}
  %table.frm-tbl{:cellpadding => 4, :cellspacing => 0}
    %tr
      %td
        %p
          %label{:for => 'comment_author'} Your name
      %td
        = precede text_field("comment", "author", :size => 20) + " " do
          %small= link_to_function("(leave url/email &#187;)", "Element.toggle('guest_url'); Element.toggle('guest_email')")
    %tr#guest_url{:style => 'display: none'}
      %td
        %p
          %label{:for => 'comment_url'} Your blog
      %td= text_field "comment", "url"
    %tr#guest_email{:style => 'display: none'}
      %td
        %p
          %label{:for => 'comment_email'} Your email
      %td= text_field "comment", "email"
    %tr
      %td
        %p
          %label{:for => 'comment_body'} Your message
      %td{:valign => 'top', :colspan => 2}= text_area "comment", "body"
    %tr
      %td#frm-btns{:colspan => 2}
        = succeed '&nbsp;&nbsp;' do
          %span#comment_loading{:style => 'display: none'}= image_tag "spinner.gif"
        = markup_help_popup TextFilter.find_by_name(this_blog.comment_text_filter), "Comment Markup Help"
        %a{:href => '#', :onclick => "new Ajax.Updater('preview', '#{url_for :action => 'comment_preview'}',  {asynchronous:true, evalScripts:true, parameters:Form.serialize('commentform'), onComplete:function(request){Element.show('preview')}}); return false;"} Preview comment
        %input#form-submit-button{:type => 'submit', :name => 'submit', :value => 'submit', :class => 'button'}/
= end_form_tag